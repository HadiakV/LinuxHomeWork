Task 1 
  Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
  
   git checkout -- <file> : Это вернет файл к последнему сохраненному коммиту.
   
Task 2
  Как вернуть файл из индекса в рабочий каталог?
  
  git reset HEAD <file>". Это отменит индексацию файла.
  

Task 3 
  
   Как отменить ошибочный commit ?
   
   git reset HEAD~1 : Это отменит последний коммит и вернет изменения в рабочий каталог.
   
Task 4
  Как создать новую ветку и переключится в нее?
  
  git checkout -b <branch_name> : Это создаст новую ветку и переключит вас на нее.
  
Task 5
  В чем отличение между fast-forward merge  and non fast-forfard merge?
  
  Fast-forward merge происходит, когда ветка, в которую вы хотите слить другую ветку, находится
  в прямой линии от ветки, которую вы хотите слить. То есть изменения, сделанные в другой ветке, можно
  просто добавить к текущей ветке. Non fast-forward merge используется, когда есть изменения в обеих
  ветках, и требуется создать новый коммит для объединения этих изменений.

Task 6 
  Когда может возникнуть конфликт слияния веток, как  его разрешить?
  
  Конфликт слияния может возникнуть, когда две ветки изменяют один и тот же 
  файл в разных местах. Для разрешения конфликта нужно вручную выбрать правильную версию файла, объединив 
  изменения из обеих веток. Для этого нужно редактировать конфликтный файл, удалить метки 
  слияния и сохранить изменения. После этого нужно выполнить команду git add <file> и закоммитить изменения.
  
Task 7
  Можно ли удалить ветку? Как? 
  
  git branch -d <branch-name> : Эта команда удалит ветку, если все изменения из ветки были уже слиты с текущей
  веткой. Если есть изменения, которые еще не были слиты, то нужно использовать команду 
  git branch -D <branch-name>, чтобы принудительно удалить ветку.

   
   
